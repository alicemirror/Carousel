/**
 * \file CarouselSound.ino
 * \brief Arduino Nano mp3 player dedicated to create the soundtrack (from original live recordings)
 * of the Carousel cage project.
 * 
 * Due problems to control seriously the DF mp3 player with Arduino MKR1000 a dedicated custom mp3
 * player ased on this board has been designed. It is controlled by a trigger pin by the MKR1000
 * that on request only send the input to start the play operation. The soundtrack management sequence
 * is automatically started on-demand (by the triggered pin) and executes the piece from the sequence,  
 * changing it everytime for about 60 seconds  including dissolve in and out. 
 * 
 * @note The player uses the same serial used also to program the Nano via USB to when a new program should
 * be uploaded the serial wires should be disconnected. For more details on the DFPlayerMini Arduino library 
 * please read the GitHub (sources docmentation includes more detailed information than the wiki). Read the 
 * DFRobotDFPlayerMini.h header file fo the constant definitions to set all the parameters.\n
 * Using Arduino Mega or Mega2560 platforms you can set the player serial to one different than the USB serial
 * e.g. Serial1
 * 
 * @warning If you copy the files on the microSD card with a Mac OS remember to launch from the terminal
 * the command dot_clean /Volumes/<SDVolumeName> before removind the microSD card. This deletes the dot files
 * automatically generated by the OSX that create noisy silent playing of undesired ghost files.
 * 
 * @note The mp3 files should be named in a numerical sequence 001.mp3 ... xxx.mp3. Files can be organized in folders
 * named in sequence 01 .. nn and every folder can contain a max of 255 files.
 * The DF PLayer support microSD cards up to 32 Gb. For more details read the datasheet in the Doc folder of the
 * repository.
 * 
 * This source and the other components of the carousel project are available on GitHub pages at the address
 * <https://alicemirror.girhub.io/Carousel
 * 
 * @author Enico Miglino <balearicdynamics@gmail.com>
 * @license LGPL 3.0
 * @versione 1.0.0
 * @date May 2019
 */

#include "Arduino.h"
#include "DFRobotDFPlayerMini.h"
//! Instance of the DF mp player class
DFRobotDFPlayerMini myDFPlayer;

//! Initialization function
void setup() {
  Serial.begin(9600);

  // Wait untile the Arduino serial connected to the player
  if (!myDFPlayer.begin(Serial)) {  //Use softwareSerial to communicate with mp3.
    while(true);
  }
  
  myDFPlayer.setTimeOut(500); //Set serial communictaion time out 500ms
  
  //----Set volume----
  myDFPlayer.volume(10);  //Set volume value (0~30).
//  myDFPlayer.volumeUp(); //Volume Up
//  myDFPlayer.volumeDown(); //Volume Down
  
  //----Set different EQ----
  myDFPlayer.EQ(DFPLAYER_EQ_NORMAL);
//  myDFPlayer.EQ(DFPLAYER_EQ_POP);
//  myDFPlayer.EQ(DFPLAYER_EQ_ROCK);
//  myDFPlayer.EQ(DFPLAYER_EQ_JAZZ);
//  myDFPlayer.EQ(DFPLAYER_EQ_CLASSIC);
//  myDFPlayer.EQ(DFPLAYER_EQ_BASS);
  
  //----Set device we use SD as default----
//  myDFPlayer.outputDevice(DFPLAYER_DEVICE_U_DISK);
  myDFPlayer.outputDevice(DFPLAYER_DEVICE_SD);
//  myDFPlayer.outputDevice(DFPLAYER_DEVICE_AUX);
//  myDFPlayer.outputDevice(DFPLAYER_DEVICE_SLEEP);
//  myDFPlayer.outputDevice(DFPLAYER_DEVICE_FLASH);
  
  //----Mp3 control----
//  myDFPlayer.sleep();     //sleep
//  myDFPlayer.reset();     //Reset the module
//  myDFPlayer.enableDAC();  //Enable On-chip DAC
//  myDFPlayer.disableDAC();  //Disable On-chip DAC
//  myDFPlayer.outputSetting(true, 15); //output setting, enable the output and set the gain to 15
  
  //----Mp3 play----
//  myDFPlayer.next();  //Play next mp3
//  delay(1000);
//  myDFPlayer.previous();  //Play previous mp3
//  delay(1000);
  myDFPlayer.play(1);  //Play the first mp3
  delay(1000);
//  myDFPlayer.loop(1);  //Loop the first mp3
//  delay(1000);
//  myDFPlayer.pause();  //pause the mp3
//  delay(1000);
//  myDFPlayer.start();  //start the mp3 from the pause
//  delay(1000);
//  myDFPlayer.playFolder(15, 4);  //play specific mp3 in SD:/15/004.mp3; Folder Name(1~99); File Name(1~255)
//  delay(1000);
//  myDFPlayer.enableLoopAll(); //loop all mp3 files.
//  delay(1000);
//  myDFPlayer.disableLoopAll(); //stop loop all mp3 files.
//  delay(1000);
//  myDFPlayer.playMp3Folder(4); //play specific mp3 in SD:/MP3/0004.mp3; File Name(0~65535)
//  delay(1000);
//  myDFPlayer.advertise(3); //advertise specific mp3 in SD:/ADVERT/0003.mp3; File Name(0~65535)
//  delay(1000);
//  myDFPlayer.stopAdvertise(); //stop advertise
//  delay(1000);
//  myDFPlayer.playLargeFolder(2, 999); //play specific mp3 in SD:/02/004.mp3; Folder Name(1~10); File Name(1~1000)
//  delay(1000);
//  myDFPlayer.loopFolder(5); //loop all mp3 files in folder SD:/05.
//  delay(1000);
//  myDFPlayer.randomAll(); //Random play all the mp3.
//  delay(1000);
//  myDFPlayer.enableLoop(); //enable loop.
//  delay(1000);
//  myDFPlayer.disableLoop(); //disable loop.
//  delay(1000);

}

void loop()
{
  static unsigned long timer = millis();
  
  if (millis() - timer > 30000) {
    timer = millis();
    myDFPlayer.next();  //Play next mp3 every 3 second.
  }
  
//  if (myDFPlayer.available()) {
//    printDetail(myDFPlayer.readType(), myDFPlayer.read()); //Print the detail message from DFPlayer to handle different errors and states.
//  }
}

void printDetail(uint8_t type, int value){
  
}
